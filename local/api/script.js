$(document).ready( () => {  const fillInfoBlockForm = document.querySelector('#fillInfoBlockForm');  const formElementsHTMLCollection = {    sessid: fillInfoBlockForm.querySelector('input[name=sessid]'),    iblock: fillInfoBlockForm.querySelector('input[name=iblock]'),    step: fillInfoBlockForm.querySelector('input[name=step]'),    count: fillInfoBlockForm.querySelector('input[name=count]'),  };  const onSubmit = (evt) => {    evt.preventDefault();    const formValues = Object.fromEntries (        Object.entries(formElementsHTMLCollection)            .map((item) => [item[0], item[1].value])    );    if (+formValues.step > +formValues.count) {      $('#result')          .html(              'Пожалуйста, сделайте размер шага меньше общего числа добавляемых элементов');      $('#result').addClass('alert-danger');      $('#result').removeClass('alert-success');      return;    }    getData(formValues);  }  const getData = async (params) => {    const apikey = 'RUN2021';    const {iblock, step, count, sessid} = params;    $('#number').html('');    $('#result').html('');    $('#result').removeClass('alert-success alert-danger');    $('#submitButton').attr('disabled', true);    $.ajax({      method: "GET",      url: `api_add.php`,      data: {iblock, step, count, apikey, sessid},      success: function () {        $('#result').html('Добавление завершено успешно.');        $('#result').addClass('alert-success');        $('#result').removeClass('alert-danger');        $('#submitButton').attr('disabled', false);      },      timeout: 60000,      error: function (xhr, status) {        if (status === 'timeout') {          $('#result').html('Истек период ожидания ответа сервера.');          $('#submitButton').attr('disabled', false);          return;        }        console.log(xhr);        const errMessage = xhr.status === 400 ? 'Неверные значения показателей' : xhr.responseText;        $('#result').html(`Призошла ошибка! ${errMessage}`);        $('#result').addClass('alert-danger');        $('#result').removeClass('alert-success');        $('#submitButton').attr('disabled', false);      },      xhr: function () {        let xhr = $.ajaxSettings.xhr();        xhr.onprogress = function (evt) {          const serverResult = evt.currentTarget.responseText.split('*');          const elementsAdded = JSON.parse(              serverResult[serverResult.length - 2]).addTotal;          $('#number').html(elementsAdded);        };        return xhr;      }    });  }fillInfoBlockForm.addEventListener('submit', onSubmit);});